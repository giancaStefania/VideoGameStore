@using CG.MVC5.Stefania.Models
@model ProductE

@{
    ViewBag.Title = "EditProduct";
}


<div class="container" id="customContainer">
    <div class="row justify-content-center">
        <div class="col-12 text-center titleOfPage">
            Edit Your Product
        </div>
    </div>
    <form id="formProduct" class="customForm" action="@Url.Action("EditProduct","Home",new { id = Model.Id })" method="post" enctype="multipart/form-data">
        <div class="divForm myForm">
            <div class="row">
                <div class="col-lg-6 col-md-12">
                    <div class="form-group">
                        <label for="inputTitle">Title</label>
                        <input id="inputTitle" class="form-control inputShadow" name="Name" type="text" placeholder="Title of product" value="@Model.Name" />
                        <label id="validationTitle" class="text-danger hiddenLabel">The price must be not empty</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-12">
                    <div class="form-group">
                        <label>Price</label>
                        <div>
                            <input id="price" class="w-100 form-control inputShadow" type="number" name="Price" min="0" value="@Model.Price.Replace(',','.')" step=".01" />
                        </div>
                        <label id="validationPrice" class="text-danger hiddenLabel">The price must not be empty</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group">
                        <label for="inputFileImage">Upload Image</label>
                        <div id="rowImage" class="row justify-content-center align-items-center text-center productForm">
                            <div id="img1" class="col-lg-4 col-md-4 col-sm-12 col-12 ">
                                <i class="fa fa-close" onclick="clickFaClose(this)" title="Remove Image"></i>
                                @if (Model.Image1_string != null)
                                {
                                    <div class="shadow-lg m-auto inputShadow" id="spanFile"><img src="~/Content/Images/@Model.Id/@Model.Image1_string" /></div>
                                }
                                else
                                {
                                    <div class="shadow-lg m-auto inputShadow" id="spanFile"><img src="~/Content/Images/image_placeholder.png" /></div>
                                }
                                <button id="buttonImage1" type="button" class="btn btn-primary inputShadow">Choose your image</button>
                                <input class="hideInputFile" type="file" id="inputFileImage1" accept="image/png,image/jpeg" name="Image1_file" />
                            </div>
                            <div id="img2" class="col-lg-4 col-md-4 col-sm-12 col-12 justify-content-center">
                                <i class="fa fa-close" onclick="clickFaClose(this)" title="Remove Image"></i>
                                @if (Model.Image2_string != null)
                                {
                                    <div class="m-auto inputShadow" id="spanFile"><img src="~/Content/Images/@Model.Id/@Model.Image2_string" /></div>
                                }
                                else
                                {
                                    <div class="m-auto inputShadow" id="spanFile"><img src="~/Content/Images/image_placeholder.png" /></div>
                                }
                                <button id="buttonImage2" type="button" class="btn btn-primary inputShadow">Choose your image</button>
                                <input class="hideInputFile" type="file" id="inputFileImage2" accept="image/png,image/jpeg" name="Image2_file" />
                            </div>
                            <div id="img3" class="col-lg-4 col-md-4 col-sm-12 col-12 justify-content-center">
                                <i class="fa fa-close" onclick="clickFaClose(this)" title="Remove Image"></i>
                                @if (Model.Image3_string != null)
                                {
                                    <div class="m-auto inputShadow" id="spanFile"><img src="~/Content/Images/@Model.Id/@Model.Image3_string" /></div>
                                }
                                else
                                {
                                    <div class="m-auto inputShadow" id="spanFile"><img src="~/Content/Images/image_placeholder.png" /></div>
                                }
                                <button id="buttonImage3" type="button" class="btn btn-primary inputShadow">Choose your image</button>
                                <input class="hideInputFile" type="file" id="inputFileImage3" accept="image/png,image/jpeg" name="Image3_file" />
                            </div>

                        </div>
                        <label id="validationImage" class="text-danger hiddenLabel">The product must contain at least one image</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Image1_file, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-12">
                    <div class="form-group">
                        <label>Category</label>
                        <div>
                            <select class="w-100 form-control inputShadow" id="category" name="Category">
                                @{Html.RenderAction("GetCategories", "Home", new { category = Model.Category });}
                            </select>
                        </div>
                        <label id="validationCategory" class="text-danger hiddenLabel">Category must not be empty</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-12">
                    <div class="form-group">
                        <label>Quantity</label>
                        <div>
                            <input id="quantity" class="w-100 form-control inputShadow" type="number" name="Quantity" min="0" value="@Model.Quantity" step="1" />
                        </div>
                        <label id="validationQuantity" class="text-danger hiddenLabel">The quantity must not be empty</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-12">
                    <div class="form-group">
                        <label>Stock</label>
                        <div>
                            <select class="w-100 form-control inputShadow" id="stock" name="Stock">
                                @{Html.RenderAction("GetStock", "Home", new { stock = Model.Stock });}
                            </select>
                        </div>
                        <label id="validationStock" class="text-danger hiddenLabel">Stock must not be empty</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-12">
                    <div id="consoleDiv" class="form-group">
                        <label>
                            Platform  <a class="text-white cursorPointer" data-toggle="modal" data-target="#platform"><i class="fa fa-plus-square"></i></a>
                            @Ajax.ActionLink(
                                   " ",
                                   "GetPlatform",
                                   "Home",
                                   new { isPlatform = false },
                                   new AjaxOptions
                                   {
                                       UpdateTargetId = "namePlatformSelect",
                                       InsertionMode = InsertionMode.Replace,
                                       HttpMethod = "POST"
                                   },
                                  new
                                  {
                                      @class = "fa fa-minus-square text-white",
                                      data_toggle = "modal",
                                      data_target = "#platformDelete",
                                      @id = "deletePlatform"
                                  })
                        </label>
                        <div>
                            <select class="w-100 form-control inputShadow" id="platformList" name="Platform">
                                @{Html.RenderAction("GetPlatform", "Home", new { platform = Model.Platform });}
                            </select>
                        </div>

                    </div>
                </div>
                <div class="col-12">
                    <div id="descriptionDiv" class="form-group">
                        <label for="textOfProduct">Description</label>
                        <div>
                            <textarea class="w-100 form-control inputShadow" id="textOfProduct" rows="10" cols="30" name="Description" placeholder="Insert description of your product">@Model.Description</textarea>
                        </div>
                        <label id="validationDescription" class="text-danger hiddenLabel">Description must not be empty</label>
                        <br />
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row text-center">
                <div class="col-md-12 col-sm-12 col-12">
                    <button id="buttonProduct" type="submit" class="btn btn-primary w-100">Submit</button>
                </div>
            </div>
        </div>
        <input class="hiddenLabel" type="text" name="Image1_string" data-image="1" value="null" />
        <input class="hiddenLabel" type="text" name="Image2_string" data-image="2" value="null" />
        <input class="hiddenLabel" type="text" name="Image3_string" data-image="3" value="null" />

    </form>
</div>
@{Html.RenderPartial("_PlatformModal", DBOperation.GetPlatform());}

@section Scripts{
    <script src="~/Scripts/editScript.js"></script>
}

